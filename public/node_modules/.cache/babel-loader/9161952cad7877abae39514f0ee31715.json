{"ast":null,"code":"var _jsxFileName = \"/Users/codeep/WebstormProjects/Chat App/public/src/pages/Chat.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from \"styled-components\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { allUsersRoute } from \"../utils/APIRoutes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat(props) {\n  _s();\n\n  const navigate = useNavigate;\n  const [contacts, setContacts] = useState([]);\n  const [currentUser, setCurrentUser] = useState(undefined);\n  useEffect(async () => {\n    if (!localStorage.getItem('chat-app-user')) {\n      navigate('/login');\n    } else {\n      setCurrentUser(await JSON.parse(localStorage.getItem(\"chat-app-user\")));\n    }\n  }, []);\n  useEffect(async () => {\n    if (currentUser) {\n      if (currentUser.isAvatarImageSet) {\n        const data = await axios.get(`${allUsersRoute}/${currentUser._id}`);\n        setContacts(data.data);\n      } else {\n        navigate('/setAvatar');\n      }\n    }\n  }, [currentUser]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"FZLp0D0W0Z/fn9pkqphYZTpPLDg=\");\n\n_c = Chat;\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 1rem;\n  align-items: center;\n  background-color: #131324;\n  .container {\n    height: 85vh;\n    width: 85vw;\n    background-color: #00000076;\n    display: grid;\n    grid-template-columns: 25% 75%;\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\n      grid-template-columns: 35% 65%;\n    }\n  }\n`;\n_c2 = Container;\nexport default Chat;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Chat\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["React","useEffect","useState","styled","useNavigate","axios","allUsersRoute","Chat","props","navigate","contacts","setContacts","currentUser","setCurrentUser","undefined","localStorage","getItem","JSON","parse","isAvatarImageSet","data","get","_id","Container","div"],"sources":["/Users/codeep/WebstormProjects/Chat App/public/src/pages/Chat.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport styled from \"styled-components\";\nimport {useNavigate} from \"react-router-dom\";\nimport axios from \"axios\";\nimport {allUsersRoute} from \"../utils/APIRoutes\";\n\nfunction Chat(props) {\n    const navigate = useNavigate\n    const [contacts,setContacts] = useState([]);\n    const [currentUser,setCurrentUser] = useState(undefined)\n    useEffect(async ()=> {\n        if(!localStorage.getItem('chat-app-user')){\n            navigate('/login')\n        } else{\n            setCurrentUser(await JSON.parse(localStorage.getItem(\"chat-app-user\")))\n        }\n    },[])\n    useEffect(async () => {\n        if(currentUser) {\n            if(currentUser.isAvatarImageSet) {\n                const data = await axios.get(`${allUsersRoute}/${currentUser._id}`);\n                setContacts(data.data);\n            }else {\n                navigate('/setAvatar')\n            }\n        }\n    }, [currentUser])\n    return (\n        <Container>\n            <div className=\"container\"></div>\n        </Container>\n    );\n}\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 1rem;\n  align-items: center;\n  background-color: #131324;\n  .container {\n    height: 85vh;\n    width: 85vw;\n    background-color: #00000076;\n    display: grid;\n    grid-template-columns: 25% 75%;\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\n      grid-template-columns: 35% 65%;\n    }\n  }\n`;\n\nexport default Chat;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,QAA4B,oBAA5B;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;EAAA;;EACjB,MAAMC,QAAQ,GAAGL,WAAjB;EACA,MAAM,CAACM,QAAD,EAAUC,WAAV,IAAyBT,QAAQ,CAAC,EAAD,CAAvC;EACA,MAAM,CAACU,WAAD,EAAaC,cAAb,IAA+BX,QAAQ,CAACY,SAAD,CAA7C;EACAb,SAAS,CAAC,YAAW;IACjB,IAAG,CAACc,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAJ,EAA0C;MACtCP,QAAQ,CAAC,QAAD,CAAR;IACH,CAFD,MAEM;MACFI,cAAc,CAAC,MAAMI,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAX,CAAP,CAAd;IACH;EACJ,CANQ,EAMP,EANO,CAAT;EAOAf,SAAS,CAAC,YAAY;IAClB,IAAGW,WAAH,EAAgB;MACZ,IAAGA,WAAW,CAACO,gBAAf,EAAiC;QAC7B,MAAMC,IAAI,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAW,GAAEf,aAAc,IAAGM,WAAW,CAACU,GAAI,EAA9C,CAAnB;QACAX,WAAW,CAACS,IAAI,CAACA,IAAN,CAAX;MACH,CAHD,MAGM;QACFX,QAAQ,CAAC,YAAD,CAAR;MACH;IACJ;EACJ,CATQ,EASN,CAACG,WAAD,CATM,CAAT;EAUA,oBACI,QAAC,SAAD;IAAA,uBACI;MAAK,SAAS,EAAC;IAAf;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH;;GA1BQL,I;;KAAAA,I;AA4BT,MAAMgB,SAAS,GAAGpB,MAAM,CAACqB,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBA;MAAMD,S;AAqBN,eAAehB,IAAf"},"metadata":{},"sourceType":"module"}