{"ast":null,"code":"var _jsxFileName = \"/Users/codeep/WebstormProjects/Chat App/public/src/pages/Chat.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from \"styled-components\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { allUsersRoute } from \"../utils/APIRoutes\";\nimport Contacts from \"../components/Contacts\";\nimport Welcome from \"../components/Welcome\";\nimport ChatContainer from \"../components/ChatContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat(props) {\n  _s();\n\n  const navigate = useNavigate;\n  const [contacts, setContacts] = useState([]);\n  const [currentUser, setCurrentUser] = useState(undefined);\n  const [currentChat, setCurrentChat] = useState(undefined);\n  useEffect(() => {\n    (async () => {\n      if (!localStorage.getItem('chat-app-user')) {\n        navigate('/login');\n      } else {\n        setCurrentUser(await JSON.parse(localStorage.getItem(\"chat-app-user\")));\n      }\n    })();\n  }, []);\n  useEffect(() => {\n    (async () => {\n      if (currentUser) {\n        if (currentUser.isAvatarImageSet) {\n          const data = await axios.get(`${allUsersRoute}/${currentUser._id}`);\n          setContacts(data.data);\n        } else {\n          navigate('/setAvatar');\n        }\n      }\n    })();\n  }, [currentUser]);\n\n  const handleChatChange = chat => {\n    setCurrentChat(chat);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Contacts, {\n        contacts: contacts,\n        currentUser: currentUser,\n        changeChat: handleChatChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), currentChat === undefined ? /*#__PURE__*/_jsxDEV(Welcome, {\n        currentUser: currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 49\n      }, this) : /*#__PURE__*/_jsxDEV(ChatContainer, {\n        currentUser: currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"G4PSxNyXTGniCd8MrnAM7N4w9q0=\");\n\n_c = Chat;\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 1rem;\n  align-items: center;\n  background-color: #131324;\n  .container {\n    height: 85vh;\n    width: 85vw;\n    background-color: #00000076;\n    display: grid;\n    grid-template-columns: 25% 75%;\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\n      grid-template-columns: 35% 65%;\n    }\n  }\n`;\n_c2 = Container;\nexport default Chat;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Chat\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["React","useEffect","useState","styled","useNavigate","axios","allUsersRoute","Contacts","Welcome","ChatContainer","Chat","props","navigate","contacts","setContacts","currentUser","setCurrentUser","undefined","currentChat","setCurrentChat","localStorage","getItem","JSON","parse","isAvatarImageSet","data","get","_id","handleChatChange","chat","Container","div"],"sources":["/Users/codeep/WebstormProjects/Chat App/public/src/pages/Chat.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport styled from \"styled-components\";\nimport {useNavigate} from \"react-router-dom\";\nimport axios from \"axios\";\nimport {allUsersRoute} from \"../utils/APIRoutes\";\nimport Contacts from \"../components/Contacts\";\nimport Welcome from \"../components/Welcome\";\nimport ChatContainer from \"../components/ChatContainer\";\n\nfunction Chat(props) {\n    const navigate = useNavigate\n    const [contacts,setContacts] = useState([]);\n    const [currentUser,setCurrentUser] = useState(undefined);\n    const [currentChat, setCurrentChat] = useState(undefined)\n    useEffect(() => {\n        (async ()=> {\n            if(!localStorage.getItem('chat-app-user')){\n                navigate('/login')\n            } else{\n                setCurrentUser(await JSON.parse(localStorage.getItem(\"chat-app-user\")))\n            }\n        })()\n    },[])\n    useEffect(() => {\n        (async () => {\n            if(currentUser) {\n                if(currentUser.isAvatarImageSet) {\n                    const data = await axios.get(`${allUsersRoute}/${currentUser._id}`);\n                    setContacts(data.data);\n                }else {\n                    navigate('/setAvatar')\n                }\n            }\n        })()\n    }, [currentUser])\n    const handleChatChange = (chat) => {\n        setCurrentChat(chat)\n    }\n    return (\n        <Container>\n            <div className=\"container\">\n                <Contacts\n                    contacts={contacts}\n                    currentUser={currentUser}\n                    changeChat ={handleChatChange}\n                />\n                {\n                    currentChat === undefined ? <Welcome currentUser = {currentUser} /> :\n                        <ChatContainer currentUser = {currentUser}/>\n                }\n\n            </div>\n        </Container>\n    );\n}\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 1rem;\n  align-items: center;\n  background-color: #131324;\n  .container {\n    height: 85vh;\n    width: 85vw;\n    background-color: #00000076;\n    display: grid;\n    grid-template-columns: 25% 75%;\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\n      grid-template-columns: 35% 65%;\n    }\n  }\n`;\n\nexport default Chat;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,QAA4B,oBAA5B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;EAAA;;EACjB,MAAMC,QAAQ,GAAGR,WAAjB;EACA,MAAM,CAACS,QAAD,EAAUC,WAAV,IAAyBZ,QAAQ,CAAC,EAAD,CAAvC;EACA,MAAM,CAACa,WAAD,EAAaC,cAAb,IAA+Bd,QAAQ,CAACe,SAAD,CAA7C;EACA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAACe,SAAD,CAA9C;EACAhB,SAAS,CAAC,MAAM;IACZ,CAAC,YAAW;MACR,IAAG,CAACmB,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAJ,EAA0C;QACtCT,QAAQ,CAAC,QAAD,CAAR;MACH,CAFD,MAEM;QACFI,cAAc,CAAC,MAAMM,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAX,CAAP,CAAd;MACH;IACJ,CAND;EAOH,CARQ,EAQP,EARO,CAAT;EASApB,SAAS,CAAC,MAAM;IACZ,CAAC,YAAY;MACT,IAAGc,WAAH,EAAgB;QACZ,IAAGA,WAAW,CAACS,gBAAf,EAAiC;UAC7B,MAAMC,IAAI,GAAG,MAAMpB,KAAK,CAACqB,GAAN,CAAW,GAAEpB,aAAc,IAAGS,WAAW,CAACY,GAAI,EAA9C,CAAnB;UACAb,WAAW,CAACW,IAAI,CAACA,IAAN,CAAX;QACH,CAHD,MAGM;UACFb,QAAQ,CAAC,YAAD,CAAR;QACH;MACJ;IACJ,CATD;EAUH,CAXQ,EAWN,CAACG,WAAD,CAXM,CAAT;;EAYA,MAAMa,gBAAgB,GAAIC,IAAD,IAAU;IAC/BV,cAAc,CAACU,IAAD,CAAd;EACH,CAFD;;EAGA,oBACI,QAAC,SAAD;IAAA,uBACI;MAAK,SAAS,EAAC,WAAf;MAAA,wBACI,QAAC,QAAD;QACI,QAAQ,EAAEhB,QADd;QAEI,WAAW,EAAEE,WAFjB;QAGI,UAAU,EAAGa;MAHjB;QAAA;QAAA;QAAA;MAAA,QADJ,EAOQV,WAAW,KAAKD,SAAhB,gBAA4B,QAAC,OAAD;QAAS,WAAW,EAAIF;MAAxB;QAAA;QAAA;QAAA;MAAA,QAA5B,gBACI,QAAC,aAAD;QAAe,WAAW,EAAIA;MAA9B;QAAA;QAAA;QAAA;MAAA,QARZ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAgBH;;GA7CQL,I;;KAAAA,I;AA+CT,MAAMoB,SAAS,GAAG3B,MAAM,CAAC4B,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBA;MAAMD,S;AAqBN,eAAepB,IAAf"},"metadata":{},"sourceType":"module"}